name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an authentication attempt.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: tremblay.al@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: libero
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: tremblay.al@example.org
      password: libero
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log the user out of the application.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/players
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of players.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"name":"Donnell Ritchie","age":"25","total_score_yearly":"827","total_score_daily":"28","best_performance":"Quibusdam suscipit laudantium neque sed omnis quasi qui.","wickets":"8"},{"id":2,"name":"Sophia Nienow","age":"24","total_score_yearly":"360","total_score_daily":"46","best_performance":"Sunt atque rerum et eum ex libero.","wickets":"35"},{"id":3,"name":"Prof. Darren Reichel PhD","age":"26","total_score_yearly":"639","total_score_daily":"18","best_performance":"Voluptas deserunt suscipit fugiat id.","wickets":"6"},{"id":4,"name":"Alek McLaughlin","age":"33","total_score_yearly":"335","total_score_daily":"43","best_performance":"Tempora cupiditate laudantium dolores.","wickets":"14"},{"id":5,"name":"Nettie Torp V","age":"34","total_score_yearly":"368","total_score_daily":"21","best_performance":"Sunt dignissimos fugit repudiandae.","wickets":"34"},{"id":6,"name":"Mrs. Lauryn Miller","age":"30","total_score_yearly":"634","total_score_daily":"17","best_performance":"Amet sit cumque mollitia non deserunt quia.","wickets":"33"},{"id":7,"name":"Fermin Rath","age":"36","total_score_yearly":"954","total_score_daily":"31","best_performance":"Excepturi corporis quibusdam repudiandae libero sequi mollitia cupiditate.","wickets":"35"},{"id":8,"name":"Cameron Hermiston","age":"28","total_score_yearly":"820","total_score_daily":"29","best_performance":"Reiciendis sit id illum aperiam rem reiciendis.","wickets":"30"},{"id":9,"name":"Mrs. Lonie Bauch","age":"32","total_score_yearly":"448","total_score_daily":"31","best_performance":"Aut quia officia rerum eligendi molestias.","wickets":"2"},{"id":10,"name":"Mona Thompson V","age":"35","total_score_yearly":"200","total_score_daily":"39","best_performance":"Sapiente est quidem vero natus itaque.","wickets":"25"}],"links":{"first":"http:\/\/localhost:8000\/api\/players?page=1","last":"http:\/\/localhost:8000\/api\/players?page=5","prev":null,"next":"http:\/\/localhost:8000\/api\/players?page=2"},"meta":{"current_page":1,"from":1,"last_page":5,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/players?page=1","label":"1","active":true},{"url":"http:\/\/localhost:8000\/api\/players?page=2","label":"2","active":false},{"url":"http:\/\/localhost:8000\/api\/players?page=3","label":"3","active":false},{"url":"http:\/\/localhost:8000\/api\/players?page=4","label":"4","active":false},{"url":"http:\/\/localhost:8000\/api\/players?page=5","label":"5","active":false},{"url":"http:\/\/localhost:8000\/api\/players?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/players","per_page":10,"to":10,"total":49}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/players
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new player in the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mtayluyttbbxaikdkdhkv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      age:
        name: age
        description: 'Must be at least 1.'
        required: true
        example: 66
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      total_score_yearly:
        name: total_score_yearly
        description: 'Must be at least 0.'
        required: true
        example: 35
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      total_score_daily:
        name: total_score_daily
        description: 'Must be at least 0.'
        required: false
        example: 53
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      best_performance:
        name: best_performance
        description: 'Must not be greater than 255 characters.'
        required: false
        example: birlbbrdaye
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      wickets:
        name: wickets
        description: 'Must be at least 0.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: mtayluyttbbxaikdkdhkv
      age: 66
      total_score_yearly: 35
      total_score_daily: 53
      best_performance: birlbbrdaye
      wickets: 25
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/players/{player_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified player.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      player_id:
        name: player_id
        description: 'The ID of the player.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      player_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"name":"Donnell Ritchie","age":"25","total_score_yearly":"827","total_score_daily":"28","best_performance":"Quibusdam suscipit laudantium neque sed omnis quasi qui.","wickets":"8"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/players/{player_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified player in the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      player_id:
        name: player_id
        description: 'The ID of the player.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      player_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mp
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      age:
        name: age
        description: 'Must be at least 1.'
        required: true
        example: 40
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      total_score_yearly:
        name: total_score_yearly
        description: 'Must be at least 0.'
        required: true
        example: 31
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      total_score_daily:
        name: total_score_daily
        description: 'Must be at least 0.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      best_performance:
        name: best_performance
        description: 'Must not be greater than 255 characters.'
        required: false
        example: bygwyqk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      wickets:
        name: wickets
        description: 'Must be at least 0.'
        required: false
        example: 73
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: mp
      age: 40
      total_score_yearly: 31
      total_score_daily: 10
      best_performance: bygwyqk
      wickets: 73
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/players/{player_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified player from the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      player_id:
        name: player_id
        description: 'The ID of the player.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      player_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/matches
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of matches.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"team1":{"id":1,"name":"McKenzie, Dare and Welch","players":"[3,4,9,13,23,25,26,33,43,48,49]"},"team2":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[6,7,10,12,17,24,31,34,44,45,47]"},"result":"team1_won","status":"pending"},{"id":2,"team1":{"id":1,"name":"McKenzie, Dare and Welch","players":"[1,3,10,17,18,24,26,30,35,40,43]"},"team2":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[2,8,12,13,14,19,21,23,33,36,44]"},"result":null,"status":"pending"},{"id":3,"team1":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[1,2,5,9,10,14,20,22,27,39,49]"},"team2":{"id":1,"name":"McKenzie, Dare and Welch","players":"[6,8,11,12,17,32,35,38,41,42,46]"},"result":null,"status":"pending"},{"id":4,"team1":{"id":1,"name":"McKenzie, Dare and Welch","players":"[9,27,30,31,35,36,37,41,42,46,49]"},"team2":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[1,3,6,15,16,21,25,29,38,39,44]"},"result":"team2_won","status":"completed"},{"id":5,"team1":{"id":1,"name":"McKenzie, Dare and Welch","players":"[8,17,18,28,33,35,36,37,43,47,48]"},"team2":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[9,13,21,22,27,31,32,39,41,42,45]"},"result":null,"status":"completed"},{"id":6,"team1":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[2,5,6,12,16,18,19,22,24,42,48]"},"team2":{"id":1,"name":"McKenzie, Dare and Welch","players":"[8,10,11,13,15,23,27,31,35,36,39]"},"result":"team1_won","status":"completed"},{"id":7,"team1":{"id":1,"name":"McKenzie, Dare and Welch","players":"[12,16,18,29,30,34,36,39,40,43,48]"},"team2":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[1,4,6,7,9,10,14,20,32,38,44]"},"result":"team2_won","status":"completed"},{"id":8,"team1":{"id":1,"name":"McKenzie, Dare and Welch","players":"[8,11,17,24,29,32,33,34,35,41,48]"},"team2":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[3,4,5,10,16,20,21,22,23,30,40]"},"result":null,"status":"completed"},{"id":9,"team1":{"id":1,"name":"McKenzie, Dare and Welch","players":"[10,12,17,21,27,30,31,39,40,43,45]"},"team2":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[1,2,9,11,16,20,22,23,24,28,33]"},"result":null,"status":"pending"},{"id":10,"team1":{"id":1,"name":"McKenzie, Dare and Welch","players":"[2,4,6,16,24,25,32,38,42,43,45]"},"team2":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[1,3,11,15,20,27,29,30,36,37,47]"},"result":"team1_won","status":"completed"}],"links":{"first":"http:\/\/localhost:8000\/api\/matches?page=1","last":"http:\/\/localhost:8000\/api\/matches?page=5","prev":null,"next":"http:\/\/localhost:8000\/api\/matches?page=2"},"meta":{"current_page":1,"from":1,"last_page":5,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/matches?page=1","label":"1","active":true},{"url":"http:\/\/localhost:8000\/api\/matches?page=2","label":"2","active":false},{"url":"http:\/\/localhost:8000\/api\/matches?page=3","label":"3","active":false},{"url":"http:\/\/localhost:8000\/api\/matches?page=4","label":"4","active":false},{"url":"http:\/\/localhost:8000\/api\/matches?page=5","label":"5","active":false},{"url":"http:\/\/localhost:8000\/api\/matches?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/matches","per_page":10,"to":10,"total":50}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/matches
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new match in the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/matches/{match_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified match.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      match_id:
        name: match_id
        description: 'The ID of the match.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      match_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"team1":{"id":1,"name":"McKenzie, Dare and Welch","players":"[3,4,9,13,23,25,26,33,43,48,49]"},"team2":{"id":2,"name":"Sanford, O''Connell and Dare","players":"[6,7,10,12,17,24,31,34,44,45,47]"},"result":"team1_won","status":"pending"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/matches/{match_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified match in the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      match_id:
        name: match_id
        description: 'The ID of the match.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      match_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/matches/{match_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified match from the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      match_id:
        name: match_id
        description: 'The ID of the match.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      match_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/stadiums
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of stadiums.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost:8000\/api\/stadiums?page=1","last":"http:\/\/localhost:8000\/api\/stadiums?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/api\/stadiums?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/api\/stadiums","per_page":10,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/stadiums
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new stadium in the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      cricket_match_id:
        name: cricket_match_id
        description: 'The <code>id</code> of an existing record in the cricket_matches table.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stadium_name:
        name: stadium_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: zfwyemlxkpsrsbslpfsbn
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      cricket_match_id: est
      stadium_name: zfwyemlxkpsrsbslpfsbn
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/stadiums/{stadium_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified stadium.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      stadium_id:
        name: stadium_id
        description: 'The ID of the stadium.'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      stadium_id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Stadium] 19"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/stadiums/{stadium_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified stadium in the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      stadium_id:
        name: stadium_id
        description: 'The ID of the stadium.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      stadium_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/stadiums/{stadium_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified stadium from the database.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      stadium_id:
        name: stadium_id
        description: 'The ID of the stadium.'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      stadium_id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
